var documenterSearchIndex = {"docs":
[{"location":"methods/#Manual","page":"Manual","title":"Manual","text":"","category":"section"},{"location":"methods/","page":"Manual","title":"Manual","text":"Modules = [AutoSymPTR]\nPrivate = false\nOrder   = [:function]","category":"page"},{"location":"methods/#AutoSymPTR.autosymptr-Union{Tuple{T}, Tuple{Any, AbstractMatrix{T}}, Tuple{Any, AbstractMatrix{T}, Any}} where T","page":"Manual","title":"AutoSymPTR.autosymptr","text":"autosymptr(f, B::AbstractMatrix, syms=nothing;\natol=0, rtol=sqrt(eps()), maxevals=typemax(Int64),\nnpt1=npt_update(f,0), npt2=npt_update(f,npt1),\nrule1=ptr(npt1, f, B, syms), rule2=ptr(npt2, f, B, syms))\n\nComputes the integral of f to within the specified tolerances and returns a tuple (I, E, numevals, rules) containing the estimated integral, the estimated error, the number of integrand evaluations, and a NamedTuple of rules used to compute the PTR on the most refined grid.\n\nnote: Convergence depends on periodicity\nIf the routine takes a long time to return, double check at the period of the function f along the basis vectors in the columns of B is consistent.\n\n\n\n\n\n","category":"method"},{"location":"methods/#AutoSymPTR.symptr-Union{Tuple{T}, Tuple{Any, AbstractMatrix{T}}, Tuple{Any, AbstractMatrix{T}, Any}} where T","page":"Manual","title":"AutoSymPTR.symptr","text":"symptr(f, B::AbstractMatrix, syms=nothing; npt=npt_update(f,0), rule=ptr(npt,f,B,syms))\n\nComputes an npt symmetrized PTR rule of f on a unit hypercube in basis B and returns a tuple (I, rules) the integral, I, and the PTR rules used. Optionally uses a precomputed keyword rule.\n\n\n\n\n\n","category":"method"},{"location":"#AutoSymPTR.jl","page":"Home","title":"AutoSymPTR.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"AutoSymPTR","category":"page"},{"location":"#AutoSymPTR","page":"Home","title":"AutoSymPTR","text":"A package implementing the automatic symmetrized periodic trapezoidal rule (PTR) for spectrally-accurate integration of periodic functions with the algorithm described by Kaye et al.. The main routine is autosymptr, which computes the integral of a periodic function to within a requested error tolerance. If nontrivial symmetries are provided, the routines return the integral on the symmetry-reduced domain, since it is generally up to the caller to implement the mapping back to the full domain, which is nontrivial in cases with non-scalar integrands. A simple example is\n\nusing LinearAlgebra, AutoSymPTR\nautosymptr(x -> 1 + mapreduce(y -> cospi(2y), +, x), I(3))[1] â‰ˆ 1\n\n\n\n\n\n","category":"module"}]
}
