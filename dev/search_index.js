var documenterSearchIndex = {"docs":
[{"location":"methods/#Manual","page":"Manual","title":"Manual","text":"","category":"section"},{"location":"methods/","page":"Manual","title":"Manual","text":"Modules = [AutoSymPTR]\nPrivate = false\nOrder   = [:function]","category":"page"},{"location":"methods/#AutoSymPTR.autosymptr-Tuple{Any, Basis}","page":"Manual","title":"AutoSymPTR.autosymptr","text":"autosymptr(f, B::AbstractMatrix, [syms=nothing]; atol=0, rtol=sqrt(eps()), maxevals=typemax(Int64), buffer=nothing)\n\nComputes the integral of f to within the specified tolerances and returns a tuple (I, E, numevals, rules) containing the estimated integral, the estimated error, the number of integrand evaluations. The integral on the symmetrized domain needs to be mapped back to the full domain by the caller, since for array-valued integrands this depends on the representation of the integrand under the action of the symmetries.\n\nNote that if a vector buffer is provided to store integrand evaluations, the integrand evaluations will be parallelized and it will be assumed that the integrand is threadsafe.\n\nnote: Convergence depends on periodicity\nIf the routine takes a long time to return, double check that the period of the function f along the basis vectors in the columns of B is consistent.\n\n\n\n\n\n","category":"method"},{"location":"#AutoSymPTR.jl","page":"Home","title":"AutoSymPTR.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"AutoSymPTR","category":"page"},{"location":"#AutoSymPTR","page":"Home","title":"AutoSymPTR","text":"A package implementing the automatic symmetrized periodic trapezoidal rule (PTR) for spectrally-accurate integration of periodic functions with the algorithm described by Kaye et al.. The main routine is autosymptr, which computes the integral of a periodic function to within a requested error tolerance. If nontrivial symmetries are provided, the routines return the integral on the symmetry-reduced domain, since it is generally up to the caller to implement the mapping back to the full domain, which is nontrivial in cases with non-scalar integrands. A simple example is\n\nusing LinearAlgebra, AutoSymPTR\nautosymptr(x -> 1 + mapreduce(y -> cospi(2y), +, x), I(3))[1] â‰ˆ 1\n\n\n\n\n\n","category":"module"}]
}
